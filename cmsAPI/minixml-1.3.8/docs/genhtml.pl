#!/usr/bin/perl

use XML::Mini::Document;
use strict;


print "Content-type: text/html\r\n\r\n";

sub createHREF {
	my $parent = shift;
	my $name = shift;
	my $href = shift;
	my $ac = $parent->createChild('a');
	$ac->attribute('href', $href);
	  my $afontel = $ac->createChild('font');
	  $afontel->attribute('color', '#eeeeee');
	  $afontel->text($name);
	$parent->text(' ');
	return;
}

my $t1NumRows = 3;
my $t1NumCols = 3;

my $t2NumRows = 2;
my $t2NumCols = 2;
		

my $htmlDoc = new XML::Mini::Document();

my $docRoot = $htmlDoc->getRoot();

my $html  = $docRoot->createChild('html');

 my $head  = $html->createChild('head');
  my $title = $head->createChild('title', 'XML::Mini Generated HTML page');

  my $style = $head->createChild('style');
  $style->comment("body,td,a,p,.h{font-family:arial,sans-serif;} .q{text-decoration:none; color:#0000cc;}");

 my $body  = $html->createChild('body');
 $body->attribute('bgcolor', '#ffffff');
 $body->attribute('link', '#0000cc');
 $body->attribute('vlink', '#551a8b');

  my $h = $body->createChild('h3', 'This page was generated by XML::Mini!');
  
  my $p1 = $body->createChild('p', "It slices, dices and never forgets the </closing tags>! heh ;) ");
  my $br = $p1->createChild('br');
  
  $p1->text("View the source of this page to take a look at ");
   
    my $href = $p1->createChild('a');
    $href->attribute('href', 'http://minixml.psychogenic.com');
    $href->text('XML::Mini');
     
  $p1->text("'s clean HTML.");
  
  my $p2 = $body->createChild('p');
    my $font = $p2->createChild('font');
    $font->attribute('size', '-1');
    $font->attribute('color', '#3333cc');
    $font->text('The table below was generated with php - hooray.');
  
  
  my $p  = $body->createChild('p');
  $p->attribute('align', 'center');
  
   my $t1 = $p->createChild('table');
   $t1->attribute('cellpadding', 5);
     
     for (my $i=0; $i < $t1NumRows; $i++)
     {
     	my $tr = $t1->createChild('tr');
	for (my $j=0; $j < $t1NumCols; $j++)
	{
		
		my $td = $tr->createChild('td');
		$td->attribute('bgcolor', '#542565');
		  my $ntable = $td->createChild('table');
		  
		  for (my $k = 0; $k < $t2NumRows; $k++)
		  {
		  
			my $ntr = $ntable->createChild('tr');
			for (my $l=0; $l < $t2NumCols; $l++)
			{
			
				my $ntd = $ntr->createChild('td');
				$ntd->attribute('bgcolor', '#401151');
				  my $nfont = $ntd->createChild('font');
				  $nfont->attribute('color', '#eeeeee');
				  $nfont->attribute('size', '-2');
				  $nfont->text("This is cell ");
				  $nfont->createChild('br');
				  $nfont->text("($i,$j,$k,$l)");
			}
		   }
	}
     }
     
     my $tr = $t1->createChild('tr');
       my $td = $tr->createChild('td');
       $td->attribute('colspan', $t1NumCols);
       $td->attribute('bgcolor', '#542565');
       $td->attribute('align','center');
         my $font = $td->createChild('font');
	 $font->attribute('size', '-2');
	 $font->attribute('color', '#eeeeee');
	 $font->text('Table brought to you by ');
	
     	 createHREF($font, 'PHP', 'http://www.php.net');
	 createHREF($font,'MiniXML','http://minixml.psychogenic.com');
	 createHREF($font,'psychogenic','http://www.psychogenic.com');
	  
	 $font->text('and a bunch of nested loops');
     

  my $lastP  = $body->createChild('p');
  $lastP->attribute('align', 'left');
  $lastP->text("============================");
  $lastP->createChild('br');
  
   my $endtable = $lastP->createChild('table');
   $endtable->attribute('width', '75%');
   $endtable->attribute('align', 'center');
   
    my $etr =  $endtable->createChild('tr');
     my $etd = $etr->createChild('td');
     
  	$etd->createChild('b', "And here is the output of \$htmlDoc->getValue()"); 
  	$etd->createChild('br');
  	$etd->text($htmlDoc->getValue());
  

print $htmlDoc->toString();
