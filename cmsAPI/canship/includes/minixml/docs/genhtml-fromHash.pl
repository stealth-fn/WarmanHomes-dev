#!/usr/bin/perl

use XML::Mini::Document;
use strict;


print "Content-type: text/html\r\n\r\n";

sub createHREF {
	my $parent = shift;
	my $name = shift;
	my $href = shift;
	my $ac = $parent->createChild('a');
	$ac->attribute('href', $href);
	  my $afontel = $ac->createChild('font');
	  $afontel->attribute('color', '#eeeeee');
	  $afontel->text($name);
	$parent->text(' ');
	return;
}

my $t1NumRows = 3;
my $t1NumCols = 3;

my $t2NumRows = 2;
my $t2NumCols = 2;


my $htmlDoc = new XML::Mini::Document();



my $options = {
		'attributes'	=> {
					'body'	=> ['bgcolor', 'link', 'vlink'],
					'-all'	=> ['align', 'color'],
					'a'	=> 'href',
					'font'	=> 'size',
					'table'	=> ['cellpadding', 'cellspacing'],
					
				},
	};

my $html = {
'html' => {

 'head'	=> {
			'title' => 'XML::Mini Generated HTML page',
			'style' => '<!-- body,td,a,p,.h{font-family:arial,sans-serif;} .q{text-decoration:none; color:#0000cc;} -->',
		},
 'body' => {
	'bgcolor' 	=> '#ffffff',
	'link' 		=> '#0000cc',
	'vlink' 	=> '#551a8b',
	'h3'	=> 'This page was generated by XML::Mini!',
	'p'		=> [
					{
						'-content'	=> 'View the source of this page to take a look at',
						'a'	=> {
								'href'	=> 'http://minixml.psychogenic.com',
								'-content' => 'XML::Mini',
						},
					},

					{
						'font'	=> {
								'size'	=> '-1',
								'color'	=> '#3333cc',
								'-content' => 'The table below was generated with php - hooray.',
							},
					},
					
					{
						'align'	=> 'center',
						'table'	=> {
								'cellpadding'	=> 5,
						},
					},

					{
						'align'	=> 'left',
						'-content' => '============================',
						'table'	=> {
								'width'	=> '75%',
								'align'	=> 'center',
								'tr'	=> [
										{
											'td' => {
													'b' => "And here is the output of \$htmlDoc->getValue()",
													'br'	=> '',
													'-content' => $htmlDoc->getValue(),
												},
										},
									],
						},
					}
			], # end list of <p>s
	}, # end of <Body>
 }, # end of <html>
}; # end of hash


$htmlDoc->fromHash($html, $options);

=head2

  my $lastP  = $body->createChild('p');
  $lastP->attribute('align', 'left');
  $lastP->text("============================");
  $lastP->createChild('br');
  
   my $endtable = $lastP->createChild('table');
   $endtable->attribute('width', '75%');
   $endtable->attribute('align', 'center');
   
    my $etr =  $endtable->createChild('tr');
     my $etd = $etr->createChild('td');
     
  	$etd->createChild('b', "And here is the output of \$htmlDoc->getValue()"); 
  	$etd->createChild('br');
  	$etd->text($htmlDoc->getValue());
  







  $p1->text("'s clean HTML.");
  
     for (my $i=0; $i < $t1NumRows; $i++)
     {
     	my $tr = $t1->createChild('tr');
	for (my $j=0; $j < $t1NumCols; $j++)
	{

my $td = $tr->createChild('td');
$td->attribute('bgcolor', '#542565');
  my $ntable = $td->createChild('table');
  
  for (my $k = 0; $k < $t2NumRows; $k++)
  {
  
	my $ntr = $ntable->createChild('tr');
	for (my $l=0; $l < $t2NumCols; $l++)
	{
	
		my $ntd = $ntr->createChild('td');
		$ntd->attribute('bgcolor', '#401151');
		  my $nfont = $ntd->createChild('font');
		  $nfont->attribute('color', '#eeeeee');
		  $nfont->attribute('size', '-2');
		  $nfont->text("This is cell ");
		  $nfont->createChild('br');
		  $nfont->text("($i,$j,$k,$l)");
	}
   }
	}
     }
     
     my $tr = $t1->createChild('tr');
       my $td = $tr->createChild('td');
       $td->attribute('colspan', $t1NumCols);
       $td->attribute('bgcolor', '#542565');
       $td->attribute('align','center');
         my $font = $td->createChild('font');
	 $font->attribute('size', '-2');
	 $font->attribute('color', '#eeeeee');
	 $font->text('Table brought to you by ');
	
     	 createHREF($font, 'PHP', 'http://www.php.net');
	 createHREF($font,'MiniXML','http://minixml.psychogenic.com');
	 createHREF($font,'psychogenic','http://www.psychogenic.com');
	  
	 $font->text('and a bunch of nested loops');

=cut


print $htmlDoc->toString();
